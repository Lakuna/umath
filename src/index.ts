export { default as combinations } from "@lakuna/umath/combinations";
export { default as degreesToRadians } from "@lakuna/umath/degreesToRadians";
export { default as factorial } from "@lakuna/umath/factorial";
export { default as fibonacci } from "@lakuna/umath/fibonacci";
export { default as greatestCommonDivisor } from "@lakuna/umath/greatestCommonDivisor";
export { default as isPrime } from "@lakuna/umath/isPrime";
export { default as permutations } from "@lakuna/umath/permutations";
export { default as primeFactorization } from "@lakuna/umath/primeFactorization";
export { default as radiansToDegrees } from "@lakuna/umath/radiansToDegrees";
export { default as summation } from "@lakuna/umath/summation";
export { type DualQuaternionLike, default as DualQuaternion } from "@lakuna/umath/DualQuaternion";
export type { MatrixLike, default as Matrix } from "@lakuna/umath/Matrix";
export { type Matrix2Like, default as Matrix2 } from "@lakuna/umath/Matrix2";
export { type Matrix3Like, default as Matrix3 } from "@lakuna/umath/Matrix3";
export { type Matrix4Like, default as Matrix4 } from "@lakuna/umath/Matrix4";
export { type QuaternionLike, default as Quaternion } from "@lakuna/umath/Quaternion";
export type { default as SquareMatrix } from "@lakuna/umath/SquareMatrix";
export type { VectorLike, default as Vector } from "@lakuna/umath/Vector";
export { type Vector2Like, default as Vector2 } from "@lakuna/umath/Vector2";
export { type Vector3Like, default as Vector3 } from "@lakuna/umath/Vector3";
export { type Vector4Like, default as Vector4 } from "@lakuna/umath/Vector4";
export type { default as AxisAngle } from "@lakuna/umath/AxisAngle";
export type { default as FieldOfView } from "@lakuna/umath/FieldOfView";
export type { IntegerRepresentation } from "@lakuna/umath/IntegerRepresentation";
export { default as BigNumber } from "@lakuna/umath/BigNumber";
export { default as epsilon } from "@lakuna/umath/epsilon";
export { default as MagnitudeError } from "@lakuna/umath/MagnitudeError";
export { default as SingularMatrixError } from "@lakuna/umath/SingularMatrixError";
